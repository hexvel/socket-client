{
  "version": 3,
  "sources": ["../../clsx/dist/clsx.m.js", "../../emoji-picker-react/src/DomUtils/classNames.ts", "../../emoji-picker-react/src/DomUtils/focusElement.ts", "../../emoji-picker-react/src/components/context/ElementRefContext.tsx", "../../emoji-picker-react/src/DomUtils/isDarkTheme.ts", "../../emoji-picker-react/src/types/exposedTypes.ts", "../../emoji-picker-react/src/config/categoryConfig.ts", "../../emoji-picker-react/src/config/cdnUrls.ts", "../../emoji-picker-react/src/data/skinToneVariations.ts", "../../emoji-picker-react/src/dataUtils/DataTypes.ts", "../../emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts", "../../emoji-picker-react/src/dataUtils/emojiSelectors.ts", "../../emoji-picker-react/src/config/config.ts", "../../emoji-picker-react/src/components/context/PickerConfigContext.tsx", "../../emoji-picker-react/src/config/useConfig.ts", "../../emoji-picker-react/src/hooks/useDebouncedState.ts", "../../emoji-picker-react/src/hooks/useHideEmojisByUniocode.ts", "../../emoji-picker-react/src/hooks/useDisallowedEmojis.ts", "../../emoji-picker-react/src/hooks/useInitialLoad.ts", "../../emoji-picker-react/src/components/context/PickerContext.tsx", "../../emoji-picker-react/src/hooks/useDisallowMouseMove.ts", "../../emoji-picker-react/src/DomUtils/elementPositionInRow.ts", "../../emoji-picker-react/src/DomUtils/selectors.ts", "../../emoji-picker-react/src/dataUtils/parseNativeEmoji.ts", "../../emoji-picker-react/src/dataUtils/suggested.ts", "../../emoji-picker-react/src/typeRefinements/typeRefinements.ts", "../../emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts", "../../emoji-picker-react/src/hooks/useSetVariationPicker.ts", "../../emoji-picker-react/src/hooks/useMouseDownHandlers.ts", "../../emoji-picker-react/src/hooks/useOnScroll.ts", "../../emoji-picker-react/src/DomUtils/scrollTo.ts", "../../emoji-picker-react/src/hooks/useFocus.ts", "../../emoji-picker-react/src/hooks/useFilter.ts", "../../emoji-picker-react/src/hooks/useIsEmojiHidden.ts", "../../emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js", "../../emoji-picker-react/src/components/atoms/Button.tsx", "../../emoji-picker-react/src/components/emoji/ClickableEmojiButton.tsx", "../../emoji-picker-react/src/components/emoji/EmojiImg.tsx", "../../emoji-picker-react/src/components/emoji/NativeEmoji.tsx", "../../emoji-picker-react/src/components/emoji/ViewOnlyEmoji.tsx", "../../emoji-picker-react/src/components/emoji/Emoji.tsx", "../../emoji-picker-react/src/components/body/EmojiCategory.tsx", "../../emoji-picker-react/src/components/body/Suggested.tsx", "../../emoji-picker-react/src/components/body/EmojiList.tsx", "../../emoji-picker-react/src/DomUtils/keyboardNavigation.ts", "../../emoji-picker-react/src/components/body/EmojiVariationPicker.tsx", "../../emoji-picker-react/src/components/body/Body.tsx", "../../emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts", "../../emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts", "../../emoji-picker-react/src/components/Layout/Flex.tsx", "../../emoji-picker-react/src/components/Layout/Space.tsx", "../../emoji-picker-react/src/components/Layout/Absolute.tsx", "../../emoji-picker-react/src/components/Layout/Relative.tsx", "../../emoji-picker-react/src/components/header/SkinTonePicker.tsx", "../../emoji-picker-react/src/components/footer/Preview.tsx", "../../emoji-picker-react/src/DomUtils/categoryNameFromDom.ts", "../../emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts", "../../emoji-picker-react/src/hooks/useIsSearchMode.ts", "../../emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts", "../../emoji-picker-react/src/hooks/useShouldHideCustomEmojis.ts", "../../emoji-picker-react/src/components/navigation/CategoryNavigation.tsx", "../../emoji-picker-react/src/components/header/Search.tsx", "../../emoji-picker-react/src/components/header/Header.tsx", "../../emoji-picker-react/src/DomUtils/getActiveElement.ts", "../../emoji-picker-react/src/hooks/useKeyboardNavigation.ts", "../../emoji-picker-react/src/hooks/preloadEmoji.ts", "../../emoji-picker-react/src/hooks/useOnFocus.ts", "../../emoji-picker-react/src/components/main/PickerMain.tsx", "../../emoji-picker-react/src/EmojiPickerReact.tsx", "../../emoji-picker-react/src/components/ErrorBoundary.tsx", "../../emoji-picker-react/src/components/emoji/ExportedEmoji.tsx", "../../emoji-picker-react/src/index.tsx"],
  "sourcesContent": ["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n", "import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n", "import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n", "export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n", "export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n", "import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n", "import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n", "import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n", "import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n", "import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n", "import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function addCustomEmojis(customEmojis: CustomEmoji[]): void {\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    emojis[Categories.CUSTOM].push(emojiData as never);\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n", "import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  addCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  addCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n", "import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const [mergedConfig] = React.useState(() => mergeConfig(config));\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n", "import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n", "import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n", "import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n", "import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n", "import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n", "import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n", "import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n", "import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n", "export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n", "import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n", "import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n", "import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n", "import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n", "import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n", "import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n", "import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n", "import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n", "import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n", "import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n", "import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n", "import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n", "import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n", "import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n", "export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n", "import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n", "import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n", "import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n", "import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n", "import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n", "import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n", "import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n", "import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n", "import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n", "import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n", "import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nfunction EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation\n  );\n});\n"],
  "mappings": "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",
  "names": ["ClassNames", "asSelectors", "classNames", "map", "c", "join", "focusElement", "element", "requestAnimationFrame", "focus", "focusPrevElementSibling", "prev", "previousElementSibling", "focusNextElementSibling", "next", "nextElementSibling", "focusFirstElementChild", "first", "firstElementChild", "ElementRefContextProvider", "children", "PickerMainRef", "React", "AnchoredEmojiRef", "BodyRef", "SearchInputRef", "SkinTonePickerRef", "CategoryNavigationRef", "VariationPickerRef", "ElementRefContext", "Provider", "value", "useElementRef", "usePickerMainRef", "useAnchoredEmojiRef", "useSetAnchoredEmojiRef", "target", "current", "useBodyRef", "useSearchInputRef", "useSkinTonePickerRef", "useCategoryNavigationRef", "useVariationPickerRef", "isSystemDarkTheme", "window", "matchMedia", "matches", "SuggestionMode", "EmojiStyle", "Theme", "SkinTones", "Categories", "SkinTonePickerLocation", "categoriesOrdered", "SUGGESTED", "CUSTOM", "SMILEYS_PEOPLE", "ANIMALS_NATURE", "FOOD_DRINK", "TRAVEL_PLACES", "ACTIVITIES", "OBJECTS", "SYMBOLS", "FLAGS", "SuggestedRecent", "name", "category", "configByCategory", "baseCategoriesConfig", "modifiers", "categoryFromCategoryConfig", "categoryNameFromCategoryConfig", "mergeCategoriesConfig", "userCategoriesConfig", "extra", "suggestionMode", "RECENT", "base", "length", "getBaseConfigByCategory", "modifier", "Object", "assign", "CDN_URL_APPLE", "CDN_URL_FACEBOOK", "CDN_URL_TWITTER", "CDN_URL_GOOGLE", "cdnUrl", "emojiStyle", "TWITTER", "GOOGLE", "FACEBOOK", "APPLE", "skinToneVariations", "NEUTRAL", "LIGHT", "MEDIUM_LIGHT", "MEDIUM", "MEDIUM_DARK", "DARK", "skinTonesNamed", "entries", "reduce", "acc", "key", "skinTonesMapped", "mapped", "skinTone", "EmojiProperties", "alphaNumericEmojiIndex", "setTimeout", "allEmojis", "searchIndex", "emoji", "indexEmoji", "joinedNameString", "emojiNames", "flat", "toLowerCase", "replace", "split", "forEach", "char", "emojiUnified", "addedIn", "parseFloat", "added_in", "emojiName", "unifiedWithoutSkinTone", "unified", "splat", "splice", "emojiHasVariations", "emojiVariationUnified", "emojisByCategory", "emojis", "emojiUrlByUnified", "emojiVariations", "variations", "find", "variation", "includes", "emojiByUnified", "allEmojisByUnified", "withoutSkinTone", "values", "addCustomEmojis", "customEmojis", "emojiData", "customToRegularEmoji", "push", "names", "id", "imgUrl", "Emoji", "activeVariationFromUnified", "suspectedSkinTone", "KNOWN_FAILING_EMOJIS", "DEFAULT_SEARCH_PLACEHOLDER", "mergeConfig", "userConfig", "basePickerConfig", "previewConfig", "config", "categories", "suggestedEmojisMode", "skinTonePickerLocation", "searchDisabled", "PREVIEW", "autoFocusSearch", "defaultSkinTone", "emojiVersion", "getEmojiUrl", "height", "lazyLoadEmojis", "onEmojiClick", "defaultOnClickHandler", "event", "basePreviewConfig", "searchPlaceHolder", "searchPlaceholder", "SEARCH", "skinTonesDisabled", "FREQUENT", "theme", "unicodeToHide", "Set", "width", "defaultEmoji", "defaultCaption", "showPreview", "ConfigContext", "PickerConfigProvider", "mergedConfig", "usePickerConfig", "useSearchPlaceHolderConfig", "p", "useDefaultSkinToneConfig", "useSkinTonesDisabledConfig", "useEmojiStyleConfig", "useAutoFocusSearchConfig", "useCategoriesConfig", "useCustomEmojisConfig", "useOnEmojiClickConfig", "usePreviewConfig", "useThemeConfig", "AUTO", "useSuggestedEmojisModeConfig", "useLazyLoadEmojisConfig", "usePickerSizeConfig", "getDimension", "useEmojiVersionConfig", "useSearchDisabledConfig", "useSkinTonePickerLocationConfig", "useUnicodeToHide", "useGetEmojiUrlConfig", "dimensionConfig", "useDebouncedState", "initialValue", "delay", "useState", "state", "setState", "timer", "useRef", "debouncedSetState", "Promise", "resolve", "clearTimeout", "useIsUnicodeHidden", "has", "useDisallowedEmojis", "DisallowedEmojisRef", "emojiVersionConfig", "useMemo", "Number", "isNaN", "disallowedEmojis", "addedInNewerVersion", "useIsEmojiDisallowed", "isUnicodeHidden", "isEmojiDisallowed", "Boolean", "supportedLevel", "useMarkInitialLoad", "dispatch", "useEffect", "PickerContextProvider", "filterRef", "disallowClickRef", "disallowMouseRef", "disallowedEmojisRef", "suggestedUpdateState", "Date", "now", "searchTerm", "skinToneFanOpenState", "activeSkinTone", "activeCategoryState", "emojisThatFailedToLoadState", "emojiVariationPickerState", "isPastInitialLoad", "setIsPastInitialLoad", "PickerContext", "undefined", "useFilterRef", "useDisallowClickRef", "useDisallowMouseRef", "useSearchTermState", "useActiveSkinToneState", "useEmojisThatFailedToLoadState", "useIsPastInitialLoad", "useEmojiVariationPickerState", "useSkinToneFanOpenState", "useUpdateSuggested", "suggestedUpdated", "setsuggestedUpdate", "updateSuggested", "useDisallowMouseMove", "DisallowMouseRef", "disallowMouseMove", "useAllowMouseMove", "allowMouseMove", "useIsMouseDisallowed", "isMouseDisallowed", "useOnMouseMove", "bodyRef", "addEventListener", "onMouseMove", "passive", "removeEventListener", "elementCountInRow", "parent", "parentWidth", "getBoundingClientRect", "elementWidth", "Math", "floor", "elementIndexInRow", "elementLeft", "left", "parentLeft", "rowNumber", "elementHeight", "elementTop", "top", "parentTop", "round", "hasNextRow", "parentHeight", "getRowElements", "elements", "row", "elementsInRow", "lastRow", "firstElementIndex", "lastElementIndex", "slice", "getNextRowElements", "allElements", "currentRow", "nextRow", "getElementInRow", "indexInRow", "rowElements", "getElementInNextRow", "index", "nextRowElements", "getElementInPrevRow", "prevRowElements", "firstVisibleElementInContainer", "parentBottom", "bottom", "visibleElements", "elementBottom", "hasNextElementSibling", "EmojiButtonSelector", "VisibleEmojiSelector", "visible", "hidden", "buttonFromTarget", "emojiElement", "closest", "emojiFromElement", "originalUnified", "originalUnifiedFromEmojiElement", "unifiedFromEmojiElement", "isEmojiElement", "parentElement", "clientHeight", "emojiTrueOffsetTop", "button", "closestCategory", "labelHeight", "categoryLabelHeight", "elementOffsetTop", "categoryWithoutLabel", "querySelector", "categoryContent", "isEmojiBehindLabel", "emojiDistanceFromScrollTop", "queryScrollBody", "root", "scrollBody", "closestScrollBody", "scrollTop", "emojiTruOffsetLeft", "elementOffsetLeft", "offsetTop", "offsetLeft", "elementDataSetKey", "elementDataSet", "dataset", "isVisibleEmoji", "classList", "contains", "isHidden", "allVisibleEmojis", "Array", "from", "querySelectorAll", "lastVisibleEmoji", "last", "prevVisibleEmoji", "nextVisibleEmoji", "firstVisibleEmoji", "nextCategory", "prevCategory", "closestCategoryContent", "parseNativeEmoji", "hex", "String", "fromCodePoint", "parseInt", "SUGGESTED_LS_KEY", "getSuggested", "mode", "localStorage", "recent", "JSON", "parse", "getItem", "sort", "a", "b", "count", "setSuggested", "existing", "u", "nextList", "concat", "filter", "i", "original", "min", "setItem", "stringify", "isCustomCategory", "isCustomEmoji", "useCloseAllOpenToggles", "variationPicker", "setVariationPicker", "skinToneFanOpen", "setSkinToneFanOpen", "closeAllOpenToggles", "useCallback", "useHasOpenToggles", "hasOpenToggles", "useSetVariationPicker", "setAnchoredEmojiRef", "setEmojiVariationPicker", "useMouseDownHandlers", "mouseDownTimerRef", "activeEmojiStyle", "onClick", "emojiFromEvent", "skinToneToUse", "emojiClickOutput", "onMouseDown", "onMouseUp", "getImageUrl", "imageUrl", "isCustom", "useOnScroll", "onScroll", "scrollTo", "$eprBody", "scrollBy", "by", "useScrollTo", "scrollEmojiAboveLabel", "useFocusSearchInput", "useFocusSkinTonePicker", "useFocusCategoryNavigation", "useSetFilterRef", "setFilter", "setter", "useClearSearch", "applySearch", "useApplySearch", "focusSearchInput", "clearSearch", "useAppendSearch", "appendSearch", "str", "getNormalizedSearchTerm", "useFilter", "setFilterRef", "onChange", "inputValue", "nextValue", "longestMatch", "findLongestMatch", "filterEmojiObjectByKeyword", "setSearchTerm", "then", "keyword", "filtered", "hasMatch", "some", "useIsEmojiFiltered", "isEmojiFilteredBySearchTerm", "dict", "longestMatchingKey", "keys", "trim", "useIsEmojiHidden", "emojisThatFailedToLoad", "isEmojiFiltered", "failedToLoad", "filteredOut", "Button", "props", "type", "className", "clsx", "ClickableEmojiButton", "hiddenOnSearch", "showVariations", "hasVariations", "EmojiImg", "style", "lazyLoad", "onError", "src", "alt", "external", "loading", "NativeEmoji", "ViewOnlyEmoji", "size", "setEmojisThatFailedToLoad", "fontSize", "emojiToRender", "NATIVE", "add", "ClickableEmoji", "EmojiCategory", "categoryConfig", "categoryName", "label", "Suggested", "suggestedEmojisModeConfig", "suggested", "suggestedItem", "EmojiList", "emojiList", "RenderCategory", "isEmojiHidden", "emojisToPush", "hiddenCounter", "isDisallowed", "focusFirstVisibleEmoji", "focusAndClickFirstVisibleEmoji", "firstEmoji", "click", "focusLastVisibleEmoji", "focusNextVisibleEmoji", "focusPrevVisibleEmoji", "focusVisibleEmojiOneRowUp", "exitUp", "visibleEmojiOneRowUp", "focusVisibleEmojiOneRowDown", "visibleEmojiOneRowDown", "countInRow", "prevVisibleCategory", "nextVisibleCategory", "itemInNextRow", "Direction", "EmojiVariationPicker", "useVariationPickerTop", "getTop", "getMenuDirection", "getPointerStyle", "usePointerStyle", "pointerStyle", "ref", "Down", "clientWidth", "direction", "Up", "emojiOffsetTop", "buttonHeight", "Body", "useEmojiPreviewEvents", "allow", "setPreviewEmoji", "onEscape", "onMouseOver", "onEnter", "onLeave", "e", "relatedTarget", "useIsSkinToneInSearch", "skinTonePickerLocationConfig", "useIsSkinToneInPreview", "FlexDirection", "Flex", "ROW", "Space", "flex", "Absolute", "position", "Relative", "ITEM_SIZE", "SkinTonePickerMenu", "right", "SkinTonePicker", "SkinTonePickerDirection", "VERTICAL", "HORIZONTAL", "isDisabled", "isOpen", "setIsOpen", "setActiveSkinTone", "fullWidth", "expandedSize", "vertical", "open", "flexBasis", "skinToneVariation", "active", "transform", "tabIndex", "Preview", "isSkinToneInPreview", "PreviewBody", "previewEmoji", "variationPickerEmoji", "show", "PreviewContent", "defaultText", "categoryNameFromDom", "$category", "getAttribute", "useActiveCategoryScrollDetection", "setActiveCategory", "visibleCategories", "Map", "observer", "IntersectionObserver", "entry", "set", "intersectionRatio", "ratios", "lastCategory", "ratio", "threshold", "el", "observe", "useIsSearchMode", "useScrollCategoryIntoView", "scrollCategoryIntoView", "useShouldHideCustomEmojis", "customCategoryConfig", "CategoryNavigation", "activeCategory", "isSearchMode", "categoriesConfig", "hideCustomCategory", "SearchContainer", "isSkinToneInSearch", "Search", "inc", "setInc", "placeholder", "autoFocus", "input", "CssSearch", "onFocus", "CSS_SEARCH_SELECTOR", "emojiPicker", "searchQuery", "Header", "getActiveElement", "document", "activeElement", "KeyboardEvents", "useKeyboardNavigation", "usePickerMainKeyboardEvents", "useSearchInputKeyboardEvents", "useSkinTonePickerKeyboardEvents", "useCategoryNavigationKeyboardEvents", "useBodyKeyboardEvents", "onKeyDown", "Escape", "preventDefault", "focusSkinTonePicker", "setSkinToneFanOpenState", "goDownFromSearchInput", "useGoDownFromSearchInput", "ArrowRight", "ArrowDown", "Enter", "onType", "useOnType", "ArrowLeft", "focusNextSkinTone", "focusPrevSkinTone", "ArrowUp", "goUpFromBody", "useGoUpFromBody", "focusCategoryNavigation", "goUpFromEmoji", "exitLeft", "currentSkinTone", "hasModifier", "match", "metaKey", "ctrlKey", "altKey", "preloadEmoji", "preloadedEmojs", "emojiUrl", "preloadImage", "url", "image", "Image", "useOnFocus", "PickerMain", "PickerRootElement", "searchModeActive", "searchActive", "EmojiPicker", "ErrorBoundary", "hasError", "getDerivedStateFromError", "componentDidCatch", "error", "errorInfo", "console", "render", "ExportedEmoji", "EmojiPickerReact"]
}
